#! /usr/bin/env zsh
#
#------ extract example code from cppman page --------
# the extracted code is equipted with a .xcode config
# and become a vscode project 

# sample usage 
#
# x_extract_cppman std::map 
# 
# extract a section of readme.md between firt level of title
#
#
#  - also serve as an multiline and dotall example for lookaround regex
#    "(?<=^# Tips\n)(.*?)(?=^#|\Z)"
#    "(?<=^# Tips\n)(.*?)(?=^#|\Z)"
#      |                  |     | 
#      |                  |     -> End of string (EOF when read whole file) 
#      |                  |
#      |                  ->lookahead
#      |->lookbehind
#      
#  - multiple line treat each line ^ $ as special, i.e. start and end of line
#  - mutliline-dotall makes "."  matches \n too
 
START="^EXAMPLE"  
END="^\S+"
cppman $1 | rg --pcre2 --multiline --multiline-dotall  "(?<=$START)(.*?)(?=$END)" \
    | grep -v $START \
    | rg --pcre2 --multiline --multiline-dotall  --passthru -r '$1/* $0 $1*/'  "(^\s+)(Output)(.*?)(?=^\S+|\Z)" \
    | rg  --passthru -r "'"  'â€™' \
> $1.cpp    
# echo will trun  '\n' into actually new line in shell, but redirect to file will not 
# ' in unicode is different ans sometimes need to replace with ascii  
# control encoding is another way to handle it

rm -rf $1
x_cpp_helloworld $1
mv $1.cpp $1


    
